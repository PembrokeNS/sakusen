To Compile and Run Sakusen for windows, do the following:

0. Download an svn copy. I assume you have already done this to be reading this file.
1. Download and install VC 2005 (Express or otherwise), the Platform SDK and the DirectX SDK (note: depending on the state of the source code, the last two may or may not be necessary. DirectX is probably not necessary at this point). The file "Installing VC Express" in this directory may be useful here.
2. Download and install Boost. http://sourceforge.net/project/showfiles.php?group_id=7586 (version 1.34.1 is known to work). You must also add the boost include directories to your VC++ include path. This can be done in the Projects and Solutions section in the Options dialog box. You will need to copy the contents of C:\Program Files\boost\boost_1_34_1\libs\filesystem\src (or wherever the equivalent place is if you installed boost elsewhere; not recommended, as you will have to adjust SWIG's paths) into trunk\ide\msvc8\boost_filesystem\src\ so that VC can find them.
3. Download, Compile and install STLPort. First, go to stlport.sourceforge.net and download the source. STlport 5.1 or greater is recommended. Extract the source to "externals\stlport".
Run "externals\stlport\buildstlport.bat" You should end up with a bunch of dlls in STLport\bin and a bunch of libraries in STLport\lib .
4. Download from http://sourceforge.net/project/showfiles.php?group_id=5624 libpng >=1.2.20 and zlib >=1.2.3 sources.
Place libpng in externals\libpng and zlib in externals\zlib
5. Download mhash from http://sourceforge.net/project/showfiles.php?group_id=4286 Place it in externals\mhash-win32. Make sure you do not overwrite mutils.h, mhash_int.h and mhash_config.h, which were modified for our purposes. svn revert on the directory will fix it if you do.
6. IF you are using tedomari, get SDL from http://www.libsdl.org/download-1.2.php (you want SDL-devel-1.2.*-VC8.zip) and unzip it to "externals\SDL". Move the files in externals\SDL\include into externals\SDL.
7. IF you desire a Pango-Cairo UI, you should install the GTK dev libraries from here:
http://gladewin32.sourceforge.net/ and add the following paths to your MSVC include paths:
C:\GTK\include\pango-1.0
C:\GTK\include\glib-2.0
C:\GTK\lib\glib-2.0\include
C:\GTK\include\cairo
and C:\GTK\lib to your library paths. If you do not desire a Cairo UI, you may skip this step. Note that at present Cairo is the only UI there is.
8. Compile Sakusen by opening the main solution file and pressing f7. This may take some time (~15 mins here).
9. To actually "play" Sakusen you must:
   a) Run setupsak.bat (in the same directory as the main solution file). Use "setupsak D" to setup a debug build. This script:
     i)Moves the requisite dlls into the same directory as your binaries.
     ii)Runs libsakusen-resources-test to generate the universe if this hasn't already been done.
     iii) Creates testsrc.sakusensource in %AppData%\sakusen\data\test
     iii)Moves tedomari\doc\user\ui.conf and config into %AppData%\sakusen\tedomari\
   c) Run fuseki.
   d) Invoke tedomari with tedomari -j "tcp|localhost"
   e) If something bad happens, contact me. It's almost certainly a bug.
10. Sing "Rule Britannia!"

Appendix: Bindings.
If you want to build the language bindings, you will need SWIG. Place it in externals\swig. Place swig.exe somewhere in your PATH (ie, where MSVC can find it: C:\Program Files\Microsoft Visual Studio 8\VC\bin works fine). You will need python 2.5 installed to build the python bindings, similarly for other languages, which I have yet to test (presently broken due to an stlport bug).